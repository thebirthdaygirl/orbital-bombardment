{"ast":null,"code":"/*!\n * @pixi/mixin-get-global-position - v5.3.3\n * Compiled Tue, 04 Aug 2020 16:23:09 UTC\n *\n * @pixi/mixin-get-global-position is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { DisplayObject } from '@pixi/display';\nimport { Point } from '@pixi/math';\n\n/**\n * Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.\n *\n * @method getGlobalPosition\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.Point} [point=new PIXI.Point()] - The point to write the global value to.\n * @param {boolean} [skipUpdate=false] - Setting to true will stop the transforms of the scene graph from\n *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n *  nice performance boost.\n * @return {PIXI.Point} The updated point.\n */\nDisplayObject.prototype.getGlobalPosition = function getGlobalPosition(point, skipUpdate) {\n  if (point === void 0) {\n    point = new Point();\n  }\n  if (skipUpdate === void 0) {\n    skipUpdate = false;\n  }\n  if (this.parent) {\n    this.parent.toGlobal(this.position, point, skipUpdate);\n  } else {\n    point.x = this.position.x;\n    point.y = this.position.y;\n  }\n  return point;\n};","map":{"version":3,"names":["DisplayObject","prototype","getGlobalPosition","point","skipUpdate","Point","parent","toGlobal","position","x","y"],"sources":["/Users/kareenarachel/Documents/Github/orbital-bombardment/orbital-bombardment-simulator/node_modules/@pixi/mixin-get-global-position/src/index.ts"],"sourcesContent":["import { DisplayObject } from '@pixi/display';\nimport { Point } from '@pixi/math';\n\n/**\n * Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.\n *\n * @method getGlobalPosition\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.Point} [point=new PIXI.Point()] - The point to write the global value to.\n * @param {boolean} [skipUpdate=false] - Setting to true will stop the transforms of the scene graph from\n *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n *  nice performance boost.\n * @return {PIXI.Point} The updated point.\n */\nDisplayObject.prototype.getGlobalPosition = function getGlobalPosition(point: Point = new Point(), skipUpdate = false): Point\n{\n    if (this.parent)\n    {\n        this.parent.toGlobal(this.position, point, skipUpdate);\n    }\n    else\n    {\n        point.x = this.position.x;\n        point.y = this.position.y;\n    }\n\n    return point;\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAcAA,aAAa,CAACC,SAAS,CAACC,iBAAiB,GAAG,SAASA,iBAAiBA,CAACC,KAA0B,EAAEC,UAAkB;EAA9C,IAAAD,KAAA;IAAAA,KAAA,OAAmBE,KAAK,EAAE;EAAA;EAAE,IAAAD,UAAA;IAAAA,UAAA,QAAkB;EAAA;EAEjH,IAAI,IAAI,CAACE,MAAM,EACf;IACI,IAAI,CAACA,MAAM,CAACC,QAAQ,CAAC,IAAI,CAACC,QAAQ,EAAEL,KAAK,EAAEC,UAAU,CAAC;GACzD,MAED;IACID,KAAK,CAACM,CAAC,GAAG,IAAI,CAACD,QAAQ,CAACC,CAAC;IACzBN,KAAK,CAACO,CAAC,GAAG,IAAI,CAACF,QAAQ,CAACE,CAAC;;EAG7B,OAAOP,KAAK;CACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}