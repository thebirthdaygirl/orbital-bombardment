{"ast":null,"code":"/*!\n * @pixi/utils - v5.3.3\n * Compiled Tue, 04 Aug 2020 16:23:09 UTC\n *\n * @pixi/utils is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { settings } from '@pixi/settings';\nexport { isMobile } from '@pixi/settings';\nexport { default as EventEmitter } from 'eventemitter3';\nexport { default as earcut } from 'earcut';\nimport { parse } from 'url';\nexport { default as url } from 'url';\nimport { BLEND_MODES } from '@pixi/constants';\n\n/**\n * The prefix that denotes a URL is for a retina asset.\n *\n * @static\n * @name RETINA_PREFIX\n * @memberof PIXI.settings\n * @type {RegExp}\n * @default /@([0-9\\.]+)x/\n * @example `@2x`\n */\nsettings.RETINA_PREFIX = /@([0-9\\.]+)x/;\n/**\n * Should the `failIfMajorPerformanceCaveat` flag be enabled as a context option used in the `isWebGLSupported` function.\n * For most scenarios this should be left as true, as otherwise the user may have a poor experience.\n * However, it can be useful to disable under certain scenarios, such as headless unit tests.\n *\n * @static\n * @name FAIL_IF_MAJOR_PERFORMANCE_CAVEAT\n * @memberof PIXI.settings\n * @type {boolean}\n * @default true\n */\nsettings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = true;\nvar saidHello = false;\nvar VERSION = '5.3.3';\n/**\n * Skips the hello message of renderers that are created after this is run.\n *\n * @function skipHello\n * @memberof PIXI.utils\n */\nfunction skipHello() {\n  saidHello = true;\n}\n/**\n * Logs out the version and renderer information for this running instance of PIXI.\n * If you don't want to see this message you can run `PIXI.utils.skipHello()` before\n * creating your renderer. Keep in mind that doing that will forever make you a jerk face.\n *\n * @static\n * @function sayHello\n * @memberof PIXI.utils\n * @param {string} type - The string renderer type to log.\n */\nfunction sayHello(type) {\n  var _a;\n  if (saidHello) {\n    return;\n  }\n  if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1) {\n    var args = [\"\\n %c %c %c PixiJS \" + VERSION + \" - \\u2730 \" + type + \" \\u2730  %c  %c  http://www.pixijs.com/  %c %c \\u2665%c\\u2665%c\\u2665 \\n\\n\", 'background: #ff66a5; padding:5px 0;', 'background: #ff66a5; padding:5px 0;', 'color: #ff66a5; background: #030307; padding:5px 0;', 'background: #ff66a5; padding:5px 0;', 'background: #ffc3dc; padding:5px 0;', 'background: #ff66a5; padding:5px 0;', 'color: #ff2424; background: #fff; padding:5px 0;', 'color: #ff2424; background: #fff; padding:5px 0;', 'color: #ff2424; background: #fff; padding:5px 0;'];\n    (_a = window.console).log.apply(_a, args);\n  } else if (window.console) {\n    window.console.log(\"PixiJS \" + VERSION + \" - \" + type + \" - http://www.pixijs.com/\");\n  }\n  saidHello = true;\n}\nvar supported;\n/**\n * Helper for checking for WebGL support.\n *\n * @memberof PIXI.utils\n * @function isWebGLSupported\n * @return {boolean} Is WebGL supported.\n */\nfunction isWebGLSupported() {\n  if (typeof supported === 'undefined') {\n    supported = function supported() {\n      var contextOptions = {\n        stencil: true,\n        failIfMajorPerformanceCaveat: settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT\n      };\n      try {\n        if (!window.WebGLRenderingContext) {\n          return false;\n        }\n        var canvas = document.createElement('canvas');\n        var gl = canvas.getContext('webgl', contextOptions) || canvas.getContext('experimental-webgl', contextOptions);\n        var success = !!(gl && gl.getContextAttributes().stencil);\n        if (gl) {\n          var loseContext = gl.getExtension('WEBGL_lose_context');\n          if (loseContext) {\n            loseContext.loseContext();\n          }\n        }\n        gl = null;\n        return success;\n      } catch (e) {\n        return false;\n      }\n    }();\n  }\n  return supported;\n}\n\n/**\n * Converts a hexadecimal color number to an [R, G, B] array of normalized floats (numbers from 0.0 to 1.0).\n *\n * @example\n * PIXI.utils.hex2rgb(0xffffff); // returns [1, 1, 1]\n * @memberof PIXI.utils\n * @function hex2rgb\n * @param {number} hex - The hexadecimal number to convert\n * @param  {number[]} [out=[]] - If supplied, this array will be used rather than returning a new one\n * @return {number[]} An array representing the [R, G, B] of the color where all values are floats.\n */\nfunction hex2rgb(hex, out) {\n  if (out === void 0) {\n    out = [];\n  }\n  out[0] = (hex >> 16 & 0xFF) / 255;\n  out[1] = (hex >> 8 & 0xFF) / 255;\n  out[2] = (hex & 0xFF) / 255;\n  return out;\n}\n/**\n * Converts a hexadecimal color number to a string.\n *\n * @example\n * PIXI.utils.hex2string(0xffffff); // returns \"#ffffff\"\n * @memberof PIXI.utils\n * @function hex2string\n * @param {number} hex - Number in hex (e.g., `0xffffff`)\n * @return {string} The string color (e.g., `\"#ffffff\"`).\n */\nfunction hex2string(hex) {\n  var hexString = hex.toString(16);\n  hexString = '000000'.substr(0, 6 - hexString.length) + hexString;\n  return \"#\" + hexString;\n}\n/**\n * Converts a hexadecimal string to a hexadecimal color number.\n *\n * @example\n * PIXI.utils.string2hex(\"#ffffff\"); // returns 0xffffff\n * @memberof PIXI.utils\n * @function string2hex\n * @param {string} string - The string color (e.g., `\"#ffffff\"`)\n * @return {number} Number in hexadecimal.\n */\nfunction string2hex(string) {\n  if (typeof string === 'string' && string[0] === '#') {\n    string = string.substr(1);\n  }\n  return parseInt(string, 16);\n}\n/**\n * Converts a color as an [R, G, B] array of normalized floats to a hexadecimal number.\n *\n * @example\n * PIXI.utils.rgb2hex([1, 1, 1]); // returns 0xffffff\n * @memberof PIXI.utils\n * @function rgb2hex\n * @param {number[]} rgb - Array of numbers where all values are normalized floats from 0.0 to 1.0.\n * @return {number} Number in hexadecimal.\n */\nfunction rgb2hex(rgb) {\n  return (rgb[0] * 255 << 16) + (rgb[1] * 255 << 8) + (rgb[2] * 255 | 0);\n}\n\n/**\n * Corrects PixiJS blend, takes premultiplied alpha into account\n *\n * @memberof PIXI.utils\n * @function mapPremultipliedBlendModes\n * @private\n * @return {Array<number[]>} Mapped modes.\n */\nfunction mapPremultipliedBlendModes() {\n  var pm = [];\n  var npm = [];\n  for (var i = 0; i < 32; i++) {\n    pm[i] = i;\n    npm[i] = i;\n  }\n  pm[BLEND_MODES.NORMAL_NPM] = BLEND_MODES.NORMAL;\n  pm[BLEND_MODES.ADD_NPM] = BLEND_MODES.ADD;\n  pm[BLEND_MODES.SCREEN_NPM] = BLEND_MODES.SCREEN;\n  npm[BLEND_MODES.NORMAL] = BLEND_MODES.NORMAL_NPM;\n  npm[BLEND_MODES.ADD] = BLEND_MODES.ADD_NPM;\n  npm[BLEND_MODES.SCREEN] = BLEND_MODES.SCREEN_NPM;\n  var array = [];\n  array.push(npm);\n  array.push(pm);\n  return array;\n}\n/**\n * maps premultiply flag and blendMode to adjusted blendMode\n * @memberof PIXI.utils\n * @const premultiplyBlendMode\n * @type {Array<number[]>}\n */\nvar premultiplyBlendMode = mapPremultipliedBlendModes();\n/**\n * changes blendMode according to texture format\n *\n * @memberof PIXI.utils\n * @function correctBlendMode\n * @param {number} blendMode - supposed blend mode\n * @param {boolean} premultiplied - whether source is premultiplied\n * @returns {number} true blend mode for this texture\n */\nfunction correctBlendMode(blendMode, premultiplied) {\n  return premultiplyBlendMode[premultiplied ? 1 : 0][blendMode];\n}\n/**\n * combines rgb and alpha to out array\n *\n * @memberof PIXI.utils\n * @function premultiplyRgba\n * @param {Float32Array|number[]} rgb - input rgb\n * @param {number} alpha - alpha param\n * @param {Float32Array} [out] - output\n * @param {boolean} [premultiply=true] - do premultiply it\n * @returns {Float32Array} vec4 rgba\n */\nfunction premultiplyRgba(rgb, alpha, out, premultiply) {\n  out = out || new Float32Array(4);\n  if (premultiply || premultiply === undefined) {\n    out[0] = rgb[0] * alpha;\n    out[1] = rgb[1] * alpha;\n    out[2] = rgb[2] * alpha;\n  } else {\n    out[0] = rgb[0];\n    out[1] = rgb[1];\n    out[2] = rgb[2];\n  }\n  out[3] = alpha;\n  return out;\n}\n/**\n * premultiplies tint\n *\n * @memberof PIXI.utils\n * @function premultiplyTint\n * @param {number} tint - integer RGB\n * @param {number} alpha - floating point alpha (0.0-1.0)\n * @returns {number} tint multiplied by alpha\n */\nfunction premultiplyTint(tint, alpha) {\n  if (alpha === 1.0) {\n    return (alpha * 255 << 24) + tint;\n  }\n  if (alpha === 0.0) {\n    return 0;\n  }\n  var R = tint >> 16 & 0xFF;\n  var G = tint >> 8 & 0xFF;\n  var B = tint & 0xFF;\n  R = R * alpha + 0.5 | 0;\n  G = G * alpha + 0.5 | 0;\n  B = B * alpha + 0.5 | 0;\n  return (alpha * 255 << 24) + (R << 16) + (G << 8) + B;\n}\n/**\n * converts integer tint and float alpha to vec4 form, premultiplies by default\n *\n * @memberof PIXI.utils\n * @function premultiplyTintToRgba\n * @param {number} tint - input tint\n * @param {number} alpha - alpha param\n * @param {Float32Array} [out] output\n * @param {boolean} [premultiply=true] - do premultiply it\n * @returns {Float32Array} vec4 rgba\n */\nfunction premultiplyTintToRgba(tint, alpha, out, premultiply) {\n  out = out || new Float32Array(4);\n  out[0] = (tint >> 16 & 0xFF) / 255.0;\n  out[1] = (tint >> 8 & 0xFF) / 255.0;\n  out[2] = (tint & 0xFF) / 255.0;\n  if (premultiply || premultiply === undefined) {\n    out[0] *= alpha;\n    out[1] *= alpha;\n    out[2] *= alpha;\n  }\n  out[3] = alpha;\n  return out;\n}\n\n/**\n * Generic Mask Stack data structure\n *\n * @memberof PIXI.utils\n * @function createIndicesForQuads\n * @param {number} size - Number of quads\n * @param {Uint16Array|Uint32Array} [outBuffer] - Buffer for output, length has to be `6 * size`\n * @return {Uint16Array|Uint32Array} - Resulting index buffer\n */\nfunction createIndicesForQuads(size, outBuffer) {\n  if (outBuffer === void 0) {\n    outBuffer = null;\n  }\n  // the total number of indices in our array, there are 6 points per quad.\n  var totalIndices = size * 6;\n  outBuffer = outBuffer || new Uint16Array(totalIndices);\n  if (outBuffer.length !== totalIndices) {\n    throw new Error(\"Out buffer length is incorrect, got \" + outBuffer.length + \" and expected \" + totalIndices);\n  }\n  // fill the indices with the quads to draw\n  for (var i = 0, j = 0; i < totalIndices; i += 6, j += 4) {\n    outBuffer[i + 0] = j + 0;\n    outBuffer[i + 1] = j + 1;\n    outBuffer[i + 2] = j + 2;\n    outBuffer[i + 3] = j + 0;\n    outBuffer[i + 4] = j + 2;\n    outBuffer[i + 5] = j + 3;\n  }\n  return outBuffer;\n}\nfunction getBufferType(array) {\n  if (array.BYTES_PER_ELEMENT === 4) {\n    if (array instanceof Float32Array) {\n      return 'Float32Array';\n    } else if (array instanceof Uint32Array) {\n      return 'Uint32Array';\n    }\n    return 'Int32Array';\n  } else if (array.BYTES_PER_ELEMENT === 2) {\n    if (array instanceof Uint16Array) {\n      return 'Uint16Array';\n    }\n  } else if (array.BYTES_PER_ELEMENT === 1) {\n    if (array instanceof Uint8Array) {\n      return 'Uint8Array';\n    }\n  }\n  // TODO map out the rest of the array elements!\n  return null;\n}\n\n/* eslint-disable object-shorthand */\nvar map = {\n  Float32Array: Float32Array,\n  Uint32Array: Uint32Array,\n  Int32Array: Int32Array,\n  Uint8Array: Uint8Array\n};\nfunction interleaveTypedArrays(arrays, sizes) {\n  var outSize = 0;\n  var stride = 0;\n  var views = {};\n  for (var i = 0; i < arrays.length; i++) {\n    stride += sizes[i];\n    outSize += arrays[i].length;\n  }\n  var buffer = new ArrayBuffer(outSize * 4);\n  var out = null;\n  var littleOffset = 0;\n  for (var i = 0; i < arrays.length; i++) {\n    var size = sizes[i];\n    var array = arrays[i];\n    /*\n    @todo This is unsafe casting but consistent with how the code worked previously. Should it stay this way\n          or should and `getBufferTypeUnsafe` function be exposed that throws an Error if unsupported type is passed?\n     */\n    var type = getBufferType(array);\n    if (!views[type]) {\n      views[type] = new map[type](buffer);\n    }\n    out = views[type];\n    for (var j = 0; j < array.length; j++) {\n      var indexStart = (j / size | 0) * stride + littleOffset;\n      var index = j % size;\n      out[indexStart + index] = array[j];\n    }\n    littleOffset += size;\n  }\n  return new Float32Array(buffer);\n}\n\n// Taken from the bit-twiddle package\n/**\n * Rounds to next power of two.\n *\n * @function nextPow2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @return {number}\n */\nfunction nextPow2(v) {\n  v += v === 0 ? 1 : 0;\n  --v;\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v + 1;\n}\n/**\n * Checks if a number is a power of two.\n *\n * @function isPow2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @return {boolean} `true` if value is power of two\n */\nfunction isPow2(v) {\n  return !(v & v - 1) && !!v;\n}\n/**\n * Computes ceil of log base 2\n *\n * @function log2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @return {number} logarithm base 2\n */\nfunction log2(v) {\n  var r = (v > 0xFFFF ? 1 : 0) << 4;\n  v >>>= r;\n  var shift = (v > 0xFF ? 1 : 0) << 3;\n  v >>>= shift;\n  r |= shift;\n  shift = (v > 0xF ? 1 : 0) << 2;\n  v >>>= shift;\n  r |= shift;\n  shift = (v > 0x3 ? 1 : 0) << 1;\n  v >>>= shift;\n  r |= shift;\n  return r | v >> 1;\n}\n\n/**\n * Remove items from a javascript array without generating garbage\n *\n * @function removeItems\n * @memberof PIXI.utils\n * @param {Array<any>} arr - Array to remove elements from\n * @param {number} startIdx - starting index\n * @param {number} removeCount - how many to remove\n */\nfunction removeItems(arr, startIdx, removeCount) {\n  var length = arr.length;\n  var i;\n  if (startIdx >= length || removeCount === 0) {\n    return;\n  }\n  removeCount = startIdx + removeCount > length ? length - startIdx : removeCount;\n  var len = length - removeCount;\n  for (i = startIdx; i < len; ++i) {\n    arr[i] = arr[i + removeCount];\n  }\n  arr.length = len;\n}\n\n/**\n * Returns sign of number\n *\n * @memberof PIXI.utils\n * @function sign\n * @param {number} n - the number to check the sign of\n * @returns {number} 0 if `n` is 0, -1 if `n` is negative, 1 if `n` is positive\n */\nfunction sign(n) {\n  if (n === 0) {\n    return 0;\n  }\n  return n < 0 ? -1 : 1;\n}\nvar nextUid = 0;\n/**\n * Gets the next unique identifier\n *\n * @memberof PIXI.utils\n * @function uid\n * @return {number} The next unique identifier to use.\n */\nfunction uid() {\n  return ++nextUid;\n}\n\n// A map of warning messages already fired\nvar warnings = {};\n/**\n * Helper for warning developers about deprecated features & settings.\n * A stack track for warnings is given; useful for tracking-down where\n * deprecated methods/properties/classes are being used within the code.\n *\n * @memberof PIXI.utils\n * @function deprecation\n * @param {string} version - The version where the feature became deprecated\n * @param {string} message - Message should include what is deprecated, where, and the new solution\n * @param {number} [ignoreDepth=3] - The number of steps to ignore at the top of the error stack\n *        this is mostly to ignore internal deprecation calls.\n */\nfunction deprecation(version, message, ignoreDepth) {\n  if (ignoreDepth === void 0) {\n    ignoreDepth = 3;\n  }\n  // Ignore duplicat\n  if (warnings[message]) {\n    return;\n  }\n  /* eslint-disable no-console */\n  var stack = new Error().stack;\n  // Handle IE < 10 and Safari < 6\n  if (typeof stack === 'undefined') {\n    console.warn('PixiJS Deprecation Warning: ', message + \"\\nDeprecated since v\" + version);\n  } else {\n    // chop off the stack trace which includes PixiJS internal calls\n    stack = stack.split('\\n').splice(ignoreDepth).join('\\n');\n    if (console.groupCollapsed) {\n      console.groupCollapsed('%cPixiJS Deprecation Warning: %c%s', 'color:#614108;background:#fffbe6', 'font-weight:normal;color:#614108;background:#fffbe6', message + \"\\nDeprecated since v\" + version);\n      console.warn(stack);\n      console.groupEnd();\n    } else {\n      console.warn('PixiJS Deprecation Warning: ', message + \"\\nDeprecated since v\" + version);\n      console.warn(stack);\n    }\n  }\n  /* eslint-enable no-console */\n  warnings[message] = true;\n}\n\n/**\n * @todo Describe property usage\n *\n * @static\n * @name ProgramCache\n * @memberof PIXI.utils\n * @type {Object}\n */\nvar ProgramCache = {};\n/**\n * @todo Describe property usage\n *\n * @static\n * @name TextureCache\n * @memberof PIXI.utils\n * @type {Object}\n */\nvar TextureCache = Object.create(null);\n/**\n * @todo Describe property usage\n *\n * @static\n * @name BaseTextureCache\n * @memberof PIXI.utils\n * @type {Object}\n */\nvar BaseTextureCache = Object.create(null);\n/**\n * Destroys all texture in the cache\n *\n * @memberof PIXI.utils\n * @function destroyTextureCache\n */\nfunction destroyTextureCache() {\n  var key;\n  for (key in TextureCache) {\n    TextureCache[key].destroy();\n  }\n  for (key in BaseTextureCache) {\n    BaseTextureCache[key].destroy();\n  }\n}\n/**\n * Removes all textures from cache, but does not destroy them\n *\n * @memberof PIXI.utils\n * @function clearTextureCache\n */\nfunction clearTextureCache() {\n  var key;\n  for (key in TextureCache) {\n    delete TextureCache[key];\n  }\n  for (key in BaseTextureCache) {\n    delete BaseTextureCache[key];\n  }\n}\n\n/**\n * Creates a Canvas element of the given size to be used as a target for rendering to.\n *\n * @class\n * @memberof PIXI.utils\n */\nvar CanvasRenderTarget = /** @class */function () {\n  /**\n   * @param {number} width - the width for the newly created canvas\n   * @param {number} height - the height for the newly created canvas\n   * @param {number} [resolution=1] - The resolution / device pixel ratio of the canvas\n   */\n  function CanvasRenderTarget(width, height, resolution) {\n    /**\n     * The Canvas object that belongs to this CanvasRenderTarget.\n     *\n     * @member {HTMLCanvasElement}\n     */\n    this.canvas = document.createElement('canvas');\n    /**\n     * A CanvasRenderingContext2D object representing a two-dimensional rendering context.\n     *\n     * @member {CanvasRenderingContext2D}\n     */\n    this.context = this.canvas.getContext('2d');\n    this.resolution = resolution || settings.RESOLUTION;\n    this.resize(width, height);\n  }\n  /**\n   * Clears the canvas that was created by the CanvasRenderTarget class.\n   *\n   * @private\n   */\n  CanvasRenderTarget.prototype.clear = function () {\n    this.context.setTransform(1, 0, 0, 1, 0, 0);\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  };\n  /**\n   * Resizes the canvas to the specified width and height.\n   *\n   * @param {number} width - the new width of the canvas\n   * @param {number} height - the new height of the canvas\n   */\n  CanvasRenderTarget.prototype.resize = function (width, height) {\n    this.canvas.width = width * this.resolution;\n    this.canvas.height = height * this.resolution;\n  };\n  /**\n   * Destroys this canvas.\n   *\n   */\n  CanvasRenderTarget.prototype.destroy = function () {\n    this.context = null;\n    this.canvas = null;\n  };\n  Object.defineProperty(CanvasRenderTarget.prototype, \"width\", {\n    /**\n     * The width of the canvas buffer in pixels.\n     *\n     * @member {number}\n     */\n    get: function () {\n      return this.canvas.width;\n    },\n    set: function (val) {\n      this.canvas.width = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CanvasRenderTarget.prototype, \"height\", {\n    /**\n     * The height of the canvas buffer in pixels.\n     *\n     * @member {number}\n     */\n    get: function () {\n      return this.canvas.height;\n    },\n    set: function (val) {\n      this.canvas.height = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return CanvasRenderTarget;\n}();\n\n/**\n * Trim transparent borders from a canvas\n *\n * @memberof PIXI.utils\n * @function trimCanvas\n * @param {HTMLCanvasElement} canvas - the canvas to trim\n * @returns {object} Trim data\n */\nfunction trimCanvas(canvas) {\n  // https://gist.github.com/remy/784508\n  var width = canvas.width;\n  var height = canvas.height;\n  var context = canvas.getContext('2d');\n  var imageData = context.getImageData(0, 0, width, height);\n  var pixels = imageData.data;\n  var len = pixels.length;\n  var bound = {\n    top: null,\n    left: null,\n    right: null,\n    bottom: null\n  };\n  var data = null;\n  var i;\n  var x;\n  var y;\n  for (i = 0; i < len; i += 4) {\n    if (pixels[i + 3] !== 0) {\n      x = i / 4 % width;\n      y = ~~(i / 4 / width);\n      if (bound.top === null) {\n        bound.top = y;\n      }\n      if (bound.left === null) {\n        bound.left = x;\n      } else if (x < bound.left) {\n        bound.left = x;\n      }\n      if (bound.right === null) {\n        bound.right = x + 1;\n      } else if (bound.right < x) {\n        bound.right = x + 1;\n      }\n      if (bound.bottom === null) {\n        bound.bottom = y;\n      } else if (bound.bottom < y) {\n        bound.bottom = y;\n      }\n    }\n  }\n  if (bound.top !== null) {\n    width = bound.right - bound.left;\n    height = bound.bottom - bound.top + 1;\n    data = context.getImageData(bound.left, bound.top, width, height);\n  }\n  return {\n    height: height,\n    width: width,\n    data: data\n  };\n}\n\n/**\n * Regexp for data URI.\n * Based on: {@link https://github.com/ragingwind/data-uri-regex}\n *\n * @static\n * @constant {RegExp|string} DATA_URI\n * @memberof PIXI\n * @example data:image/png;base64\n */\nvar DATA_URI = /^\\s*data:(?:([\\w-]+)\\/([\\w+.-]+))?(?:;charset=([\\w-]+))?(?:;(base64))?,(.*)/i;\n\n/**\n * @memberof PIXI.utils\n * @interface DecomposedDataUri\n */\n/**\n * type, eg. `image`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} mediaType\n */\n/**\n * Sub type, eg. `png`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} subType\n */\n/**\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} charset\n */\n/**\n * Data encoding, eg. `base64`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} encoding\n */\n/**\n * The actual data\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} data\n */\n/**\n * Split a data URI into components. Returns undefined if\n * parameter `dataUri` is not a valid data URI.\n *\n * @memberof PIXI.utils\n * @function decomposeDataUri\n * @param {string} dataUri - the data URI to check\n * @return {PIXI.utils.DecomposedDataUri|undefined} The decomposed data uri or undefined\n */\nfunction decomposeDataUri(dataUri) {\n  var dataUriMatch = DATA_URI.exec(dataUri);\n  if (dataUriMatch) {\n    return {\n      mediaType: dataUriMatch[1] ? dataUriMatch[1].toLowerCase() : undefined,\n      subType: dataUriMatch[2] ? dataUriMatch[2].toLowerCase() : undefined,\n      charset: dataUriMatch[3] ? dataUriMatch[3].toLowerCase() : undefined,\n      encoding: dataUriMatch[4] ? dataUriMatch[4].toLowerCase() : undefined,\n      data: dataUriMatch[5]\n    };\n  }\n  return undefined;\n}\nvar tempAnchor;\n/**\n * Sets the `crossOrigin` property for this resource based on if the url\n * for this resource is cross-origin. If crossOrigin was manually set, this\n * function does nothing.\n * Nipped from the resource loader!\n *\n * @ignore\n * @param {string} url - The url to test.\n * @param {object} [loc=window.location] - The location object to test against.\n * @return {string} The crossOrigin value to use (or empty string for none).\n */\nfunction determineCrossOrigin(url, loc) {\n  if (loc === void 0) {\n    loc = window.location;\n  }\n  // data: and javascript: urls are considered same-origin\n  if (url.indexOf('data:') === 0) {\n    return '';\n  }\n  // default is window.location\n  loc = loc || window.location;\n  if (!tempAnchor) {\n    tempAnchor = document.createElement('a');\n  }\n  // let the browser determine the full href for the url of this resource and then\n  // parse with the node url lib, we can't use the properties of the anchor element\n  // because they don't work in IE9 :(\n  tempAnchor.href = url;\n  var parsedUrl = parse(tempAnchor.href);\n  var samePort = !parsedUrl.port && loc.port === '' || parsedUrl.port === loc.port;\n  // if cross origin\n  if (parsedUrl.hostname !== loc.hostname || !samePort || parsedUrl.protocol !== loc.protocol) {\n    return 'anonymous';\n  }\n  return '';\n}\n\n/**\n * get the resolution / device pixel ratio of an asset by looking for the prefix\n * used by spritesheets and image urls\n *\n * @memberof PIXI.utils\n * @function getResolutionOfUrl\n * @param {string} url - the image path\n * @param {number} [defaultValue=1] - the defaultValue if no filename prefix is set.\n * @return {number} resolution / device pixel ratio of an asset\n */\nfunction getResolutionOfUrl(url, defaultValue) {\n  var resolution = settings.RETINA_PREFIX.exec(url);\n  if (resolution) {\n    return parseFloat(resolution[1]);\n  }\n  return defaultValue !== undefined ? defaultValue : 1;\n}\n\n/**\n * Generalized convenience utilities for PIXI.\n * @example\n * // Extend PIXI's internal Event Emitter.\n * class MyEmitter extends PIXI.utils.EventEmitter {\n *   constructor() {\n *      super();\n *      console.log(\"Emitter created!\");\n *   }\n * }\n *\n * // Get info on current device\n * console.log(PIXI.utils.isMobile);\n *\n * // Convert hex color to string\n * console.log(PIXI.utils.hex2string(0xff00ff)); // returns: \"#ff00ff\"\n * @namespace PIXI.utils\n */\n\nexport { BaseTextureCache, CanvasRenderTarget, DATA_URI, ProgramCache, TextureCache, clearTextureCache, correctBlendMode, createIndicesForQuads, decomposeDataUri, deprecation, destroyTextureCache, determineCrossOrigin, getBufferType, getResolutionOfUrl, hex2rgb, hex2string, interleaveTypedArrays, isPow2, isWebGLSupported, log2, nextPow2, premultiplyBlendMode, premultiplyRgba, premultiplyTint, premultiplyTintToRgba, removeItems, rgb2hex, sayHello, sign, skipHello, string2hex, trimCanvas, uid };","map":{"version":3,"names":["settings","RETINA_PREFIX","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","saidHello","VERSION","skipHello","sayHello","type","navigator","userAgent","toLowerCase","indexOf","args","_a","window","console","log","apply","supported","isWebGLSupported","contextOptions","stencil","failIfMajorPerformanceCaveat","WebGLRenderingContext","canvas","document","createElement","gl","getContext","success","getContextAttributes","loseContext","getExtension","e","hex2rgb","hex","out","hex2string","hexString","toString","substr","length","string2hex","string","parseInt","rgb2hex","rgb","mapPremultipliedBlendModes","pm","npm","i","BLEND_MODES","NORMAL_NPM","NORMAL","ADD_NPM","ADD","SCREEN_NPM","SCREEN","array","push","premultiplyBlendMode","correctBlendMode","blendMode","premultiplied","premultiplyRgba","alpha","premultiply","Float32Array","undefined","premultiplyTint","tint","R","G","B","premultiplyTintToRgba","createIndicesForQuads","size","outBuffer","totalIndices","Uint16Array","Error","j","getBufferType","BYTES_PER_ELEMENT","Uint32Array","Uint8Array","map","Int32Array","interleaveTypedArrays","arrays","sizes","outSize","stride","views","buffer","ArrayBuffer","littleOffset","indexStart","index","nextPow2","v","isPow2","log2","r","shift","removeItems","arr","startIdx","removeCount","len","sign","n","nextUid","uid","warnings","deprecation","version","message","ignoreDepth","stack","warn","split","splice","join","groupCollapsed","groupEnd","ProgramCache","TextureCache","Object","create","BaseTextureCache","destroyTextureCache","key","destroy","clearTextureCache","CanvasRenderTarget","width","height","resolution","context","RESOLUTION","resize","prototype","clear","setTransform","clearRect","defineProperty","get","set","val","trimCanvas","imageData","getImageData","pixels","data","bound","top","left","right","bottom","x","y","DATA_URI","decomposeDataUri","dataUri","dataUriMatch","exec","mediaType","subType","charset","encoding","tempAnchor","determineCrossOrigin","url","loc","location","href","parsedUrl","parse","samePort","port","hostname","protocol","getResolutionOfUrl","defaultValue","parseFloat"],"sources":["/Users/kareenarachel/Documents/Github/orbital-bombardment-simulator/orbital-bombardment-simulator/node_modules/@pixi/utils/src/settings.ts","/Users/kareenarachel/Documents/Github/orbital-bombardment-simulator/orbital-bombardment-simulator/node_modules/@pixi/utils/src/browser/hello.ts","/Users/kareenarachel/Documents/Github/orbital-bombardment-simulator/orbital-bombardment-simulator/node_modules/@pixi/utils/src/browser/isWebGLSupported.ts","/Users/kareenarachel/Documents/Github/orbital-bombardment-simulator/orbital-bombardment-simulator/node_modules/@pixi/utils/src/color/hex.ts","/Users/kareenarachel/Documents/Github/orbital-bombardment-simulator/orbital-bombardment-simulator/node_modules/@pixi/utils/src/color/premultiply.ts","/Users/kareenarachel/Documents/Github/orbital-bombardment-simulator/orbital-bombardment-simulator/node_modules/@pixi/utils/src/data/createIndicesForQuads.ts","/Users/kareenarachel/Documents/Github/orbital-bombardment-simulator/orbital-bombardment-simulator/node_modules/@pixi/utils/src/data/getBufferType.ts","/Users/kareenarachel/Documents/Github/orbital-bombardment-simulator/orbital-bombardment-simulator/node_modules/@pixi/utils/src/data/interleaveTypedArrays.ts","/Users/kareenarachel/Documents/Github/orbital-bombardment-simulator/orbital-bombardment-simulator/node_modules/@pixi/utils/src/data/pow2.ts","/Users/kareenarachel/Documents/Github/orbital-bombardment-simulator/orbital-bombardment-simulator/node_modules/@pixi/utils/src/data/removeItems.ts","/Users/kareenarachel/Documents/Github/orbital-bombardment-simulator/orbital-bombardment-simulator/node_modules/@pixi/utils/src/data/sign.ts","/Users/kareenarachel/Documents/Github/orbital-bombardment-simulator/orbital-bombardment-simulator/node_modules/@pixi/utils/src/data/uid.ts","/Users/kareenarachel/Documents/Github/orbital-bombardment-simulator/orbital-bombardment-simulator/node_modules/@pixi/utils/src/logging/deprecation.ts","/Users/kareenarachel/Documents/Github/orbital-bombardment-simulator/orbital-bombardment-simulator/node_modules/@pixi/utils/src/media/caches.ts","/Users/kareenarachel/Documents/Github/orbital-bombardment-simulator/orbital-bombardment-simulator/node_modules/@pixi/utils/src/media/CanvasRenderTarget.ts","/Users/kareenarachel/Documents/Github/orbital-bombardment-simulator/orbital-bombardment-simulator/node_modules/@pixi/utils/src/media/trimCanvas.ts","/Users/kareenarachel/Documents/Github/orbital-bombardment-simulator/orbital-bombardment-simulator/node_modules/@pixi/utils/src/const.ts","/Users/kareenarachel/Documents/Github/orbital-bombardment-simulator/orbital-bombardment-simulator/node_modules/@pixi/utils/src/network/decomposeDataUri.ts","/Users/kareenarachel/Documents/Github/orbital-bombardment-simulator/orbital-bombardment-simulator/node_modules/@pixi/utils/src/network/determineCrossOrigin.ts","/Users/kareenarachel/Documents/Github/orbital-bombardment-simulator/orbital-bombardment-simulator/node_modules/@pixi/utils/src/network/getResolutionOfUrl.ts","/Users/kareenarachel/Documents/Github/orbital-bombardment-simulator/orbital-bombardment-simulator/node_modules/@pixi/utils/src/index.ts"],"sourcesContent":["import { settings } from '@pixi/settings';\n\n/**\n * The prefix that denotes a URL is for a retina asset.\n *\n * @static\n * @name RETINA_PREFIX\n * @memberof PIXI.settings\n * @type {RegExp}\n * @default /@([0-9\\.]+)x/\n * @example `@2x`\n */\nsettings.RETINA_PREFIX = /@([0-9\\.]+)x/;\n\n/**\n * Should the `failIfMajorPerformanceCaveat` flag be enabled as a context option used in the `isWebGLSupported` function.\n * For most scenarios this should be left as true, as otherwise the user may have a poor experience.\n * However, it can be useful to disable under certain scenarios, such as headless unit tests.\n *\n * @static\n * @name FAIL_IF_MAJOR_PERFORMANCE_CAVEAT\n * @memberof PIXI.settings\n * @type {boolean}\n * @default true\n */\nsettings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = true;\n\nexport { settings };\n","let saidHello = false;\nconst VERSION = '__VERSION__';\n\n/**\n * Skips the hello message of renderers that are created after this is run.\n *\n * @function skipHello\n * @memberof PIXI.utils\n */\nexport function skipHello(): void\n{\n    saidHello = true;\n}\n\n/**\n * Logs out the version and renderer information for this running instance of PIXI.\n * If you don't want to see this message you can run `PIXI.utils.skipHello()` before\n * creating your renderer. Keep in mind that doing that will forever make you a jerk face.\n *\n * @static\n * @function sayHello\n * @memberof PIXI.utils\n * @param {string} type - The string renderer type to log.\n */\nexport function sayHello(type: string): void\n{\n    if (saidHello)\n    {\n        return;\n    }\n\n    if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1)\n    {\n        const args = [\n            `\\n %c %c %c PixiJS ${VERSION} - ✰ ${type} ✰  %c  %c  http://www.pixijs.com/  %c %c ♥%c♥%c♥ \\n\\n`,\n            'background: #ff66a5; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'color: #ff66a5; background: #030307; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'background: #ffc3dc; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n        ];\n\n        window.console.log(...args);\n    }\n    else if (window.console)\n    {\n        window.console.log(`PixiJS ${VERSION} - ${type} - http://www.pixijs.com/`);\n    }\n\n    saidHello = true;\n}\n","import { settings } from '../settings';\n\nlet supported: boolean|undefined;\n\n/**\n * Helper for checking for WebGL support.\n *\n * @memberof PIXI.utils\n * @function isWebGLSupported\n * @return {boolean} Is WebGL supported.\n */\nexport function isWebGLSupported(): boolean\n{\n    if (typeof supported === 'undefined')\n    {\n        supported = (function supported(): boolean\n        {\n            const contextOptions = {\n                stencil: true,\n                failIfMajorPerformanceCaveat: settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT,\n            };\n\n            try\n            {\n                if (!window.WebGLRenderingContext)\n                {\n                    return false;\n                }\n\n                const canvas = document.createElement('canvas');\n                let gl = (\n                    canvas.getContext('webgl', contextOptions)\n                    || canvas.getContext('experimental-webgl', contextOptions)\n                ) as WebGLRenderingContext;\n\n                const success = !!(gl && gl.getContextAttributes().stencil);\n\n                if (gl)\n                {\n                    const loseContext = gl.getExtension('WEBGL_lose_context');\n\n                    if (loseContext)\n                    {\n                        loseContext.loseContext();\n                    }\n                }\n\n                gl = null;\n\n                return success;\n            }\n            catch (e)\n            {\n                return false;\n            }\n        })();\n    }\n\n    return supported;\n}\n","/**\n * Converts a hexadecimal color number to an [R, G, B] array of normalized floats (numbers from 0.0 to 1.0).\n *\n * @example\n * PIXI.utils.hex2rgb(0xffffff); // returns [1, 1, 1]\n * @memberof PIXI.utils\n * @function hex2rgb\n * @param {number} hex - The hexadecimal number to convert\n * @param  {number[]} [out=[]] - If supplied, this array will be used rather than returning a new one\n * @return {number[]} An array representing the [R, G, B] of the color where all values are floats.\n */\nexport function hex2rgb(hex: number, out: Array<number> | Float32Array = []): Array<number> | Float32Array\n{\n    out[0] = ((hex >> 16) & 0xFF) / 255;\n    out[1] = ((hex >> 8) & 0xFF) / 255;\n    out[2] = (hex & 0xFF) / 255;\n\n    return out;\n}\n\n/**\n * Converts a hexadecimal color number to a string.\n *\n * @example\n * PIXI.utils.hex2string(0xffffff); // returns \"#ffffff\"\n * @memberof PIXI.utils\n * @function hex2string\n * @param {number} hex - Number in hex (e.g., `0xffffff`)\n * @return {string} The string color (e.g., `\"#ffffff\"`).\n */\nexport function hex2string(hex: number): string\n{\n    let hexString = hex.toString(16);\n\n    hexString = '000000'.substr(0, 6 - hexString.length) + hexString;\n\n    return `#${hexString}`;\n}\n\n/**\n * Converts a hexadecimal string to a hexadecimal color number.\n *\n * @example\n * PIXI.utils.string2hex(\"#ffffff\"); // returns 0xffffff\n * @memberof PIXI.utils\n * @function string2hex\n * @param {string} string - The string color (e.g., `\"#ffffff\"`)\n * @return {number} Number in hexadecimal.\n */\nexport function string2hex(string: string): number\n{\n    if (typeof string === 'string' && string[0] === '#')\n    {\n        string = string.substr(1);\n    }\n\n    return parseInt(string, 16);\n}\n\n/**\n * Converts a color as an [R, G, B] array of normalized floats to a hexadecimal number.\n *\n * @example\n * PIXI.utils.rgb2hex([1, 1, 1]); // returns 0xffffff\n * @memberof PIXI.utils\n * @function rgb2hex\n * @param {number[]} rgb - Array of numbers where all values are normalized floats from 0.0 to 1.0.\n * @return {number} Number in hexadecimal.\n */\nexport function rgb2hex(rgb: number[] | Float32Array): number\n{\n    return (((rgb[0] * 255) << 16) + ((rgb[1] * 255) << 8) + (rgb[2] * 255 | 0));\n}\n","import { BLEND_MODES } from '@pixi/constants';\n\n/**\n * Corrects PixiJS blend, takes premultiplied alpha into account\n *\n * @memberof PIXI.utils\n * @function mapPremultipliedBlendModes\n * @private\n * @return {Array<number[]>} Mapped modes.\n */\nfunction mapPremultipliedBlendModes(): number[][]\n{\n    const pm = [];\n    const npm = [];\n\n    for (let i = 0; i < 32; i++)\n    {\n        pm[i] = i;\n        npm[i] = i;\n    }\n\n    pm[BLEND_MODES.NORMAL_NPM] = BLEND_MODES.NORMAL;\n    pm[BLEND_MODES.ADD_NPM] = BLEND_MODES.ADD;\n    pm[BLEND_MODES.SCREEN_NPM] = BLEND_MODES.SCREEN;\n\n    npm[BLEND_MODES.NORMAL] = BLEND_MODES.NORMAL_NPM;\n    npm[BLEND_MODES.ADD] = BLEND_MODES.ADD_NPM;\n    npm[BLEND_MODES.SCREEN] = BLEND_MODES.SCREEN_NPM;\n\n    const array: number[][] = [];\n\n    array.push(npm);\n    array.push(pm);\n\n    return array;\n}\n\n/**\n * maps premultiply flag and blendMode to adjusted blendMode\n * @memberof PIXI.utils\n * @const premultiplyBlendMode\n * @type {Array<number[]>}\n */\nexport const premultiplyBlendMode = mapPremultipliedBlendModes();\n\n/**\n * changes blendMode according to texture format\n *\n * @memberof PIXI.utils\n * @function correctBlendMode\n * @param {number} blendMode - supposed blend mode\n * @param {boolean} premultiplied - whether source is premultiplied\n * @returns {number} true blend mode for this texture\n */\nexport function correctBlendMode(blendMode: number, premultiplied: boolean): number\n{\n    return premultiplyBlendMode[premultiplied ? 1 : 0][blendMode];\n}\n\n/**\n * combines rgb and alpha to out array\n *\n * @memberof PIXI.utils\n * @function premultiplyRgba\n * @param {Float32Array|number[]} rgb - input rgb\n * @param {number} alpha - alpha param\n * @param {Float32Array} [out] - output\n * @param {boolean} [premultiply=true] - do premultiply it\n * @returns {Float32Array} vec4 rgba\n */\nexport function premultiplyRgba(\n    rgb: Float32Array|number[],\n    alpha: number,\n    out: Float32Array,\n    premultiply: boolean\n): Float32Array\n{\n    out = out || new Float32Array(4);\n    if (premultiply || premultiply === undefined)\n    {\n        out[0] = rgb[0] * alpha;\n        out[1] = rgb[1] * alpha;\n        out[2] = rgb[2] * alpha;\n    }\n    else\n    {\n        out[0] = rgb[0];\n        out[1] = rgb[1];\n        out[2] = rgb[2];\n    }\n    out[3] = alpha;\n\n    return out;\n}\n\n/**\n * premultiplies tint\n *\n * @memberof PIXI.utils\n * @function premultiplyTint\n * @param {number} tint - integer RGB\n * @param {number} alpha - floating point alpha (0.0-1.0)\n * @returns {number} tint multiplied by alpha\n */\nexport function premultiplyTint(tint: number, alpha: number): number\n{\n    if (alpha === 1.0)\n    {\n        return (alpha * 255 << 24) + tint;\n    }\n    if (alpha === 0.0)\n    {\n        return 0;\n    }\n    let R = ((tint >> 16) & 0xFF);\n    let G = ((tint >> 8) & 0xFF);\n    let B = (tint & 0xFF);\n\n    R = ((R * alpha) + 0.5) | 0;\n    G = ((G * alpha) + 0.5) | 0;\n    B = ((B * alpha) + 0.5) | 0;\n\n    return (alpha * 255 << 24) + (R << 16) + (G << 8) + B;\n}\n\n/**\n * converts integer tint and float alpha to vec4 form, premultiplies by default\n *\n * @memberof PIXI.utils\n * @function premultiplyTintToRgba\n * @param {number} tint - input tint\n * @param {number} alpha - alpha param\n * @param {Float32Array} [out] output\n * @param {boolean} [premultiply=true] - do premultiply it\n * @returns {Float32Array} vec4 rgba\n */\nexport function premultiplyTintToRgba(tint: number, alpha: number, out: Float32Array, premultiply: boolean): Float32Array\n{\n    out = out || new Float32Array(4);\n    out[0] = ((tint >> 16) & 0xFF) / 255.0;\n    out[1] = ((tint >> 8) & 0xFF) / 255.0;\n    out[2] = (tint & 0xFF) / 255.0;\n    if (premultiply || premultiply === undefined)\n    {\n        out[0] *= alpha;\n        out[1] *= alpha;\n        out[2] *= alpha;\n    }\n    out[3] = alpha;\n\n    return out;\n}\n","/**\n * Generic Mask Stack data structure\n *\n * @memberof PIXI.utils\n * @function createIndicesForQuads\n * @param {number} size - Number of quads\n * @param {Uint16Array|Uint32Array} [outBuffer] - Buffer for output, length has to be `6 * size`\n * @return {Uint16Array|Uint32Array} - Resulting index buffer\n */\nexport function createIndicesForQuads(size: number, outBuffer: Uint16Array|Uint32Array = null): Uint16Array|Uint32Array\n{\n    // the total number of indices in our array, there are 6 points per quad.\n    const totalIndices = size * 6;\n\n    outBuffer = outBuffer || new Uint16Array(totalIndices);\n\n    if (outBuffer.length !== totalIndices)\n    {\n        throw new Error(`Out buffer length is incorrect, got ${outBuffer.length} and expected ${totalIndices}`);\n    }\n\n    // fill the indices with the quads to draw\n    for (let i = 0, j = 0; i < totalIndices; i += 6, j += 4)\n    {\n        outBuffer[i + 0] = j + 0;\n        outBuffer[i + 1] = j + 1;\n        outBuffer[i + 2] = j + 2;\n        outBuffer[i + 3] = j + 0;\n        outBuffer[i + 4] = j + 2;\n        outBuffer[i + 5] = j + 3;\n    }\n\n    return outBuffer;\n}\n","import type { ITypedArray } from '@pixi/core';\n\nexport function getBufferType(array: ITypedArray): 'Float32Array'|'Uint32Array'|'Int32Array'|'Uint16Array'|'Uint8Array'|null\n{\n    if (array.BYTES_PER_ELEMENT === 4)\n    {\n        if (array instanceof Float32Array)\n        {\n            return 'Float32Array';\n        }\n        else if (array instanceof Uint32Array)\n        {\n            return 'Uint32Array';\n        }\n\n        return 'Int32Array';\n    }\n    else if (array.BYTES_PER_ELEMENT === 2)\n    {\n        if (array instanceof Uint16Array)\n        {\n            return 'Uint16Array';\n        }\n    }\n    else if (array.BYTES_PER_ELEMENT === 1)\n    {\n        if (array instanceof Uint8Array)\n        {\n            return 'Uint8Array';\n        }\n    }\n\n    // TODO map out the rest of the array elements!\n    return null;\n}\n","import { getBufferType } from './getBufferType';\n\n/* eslint-disable object-shorthand */\nconst map = { Float32Array: Float32Array, Uint32Array: Uint32Array, Int32Array: Int32Array, Uint8Array: Uint8Array };\n\ntype PackedArray = Float32Array|Uint32Array|Int32Array|Uint8Array;\n\nexport function interleaveTypedArrays(arrays: PackedArray[], sizes: number[]): Float32Array\n{\n    let outSize = 0;\n    let stride = 0;\n    const views: {[key: string]: PackedArray} = {};\n\n    for (let i = 0; i < arrays.length; i++)\n    {\n        stride += sizes[i];\n        outSize += arrays[i].length;\n    }\n\n    const buffer = new ArrayBuffer(outSize * 4);\n\n    let out = null;\n    let littleOffset = 0;\n\n    for (let i = 0; i < arrays.length; i++)\n    {\n        const size = sizes[i];\n        const array = arrays[i];\n\n        /*\n        @todo This is unsafe casting but consistent with how the code worked previously. Should it stay this way\n              or should and `getBufferTypeUnsafe` function be exposed that throws an Error if unsupported type is passed?\n         */\n        const type = getBufferType(array) as keyof typeof map;\n\n        if (!views[type])\n        {\n            views[type] = new map[type](buffer);\n        }\n\n        out = views[type];\n\n        for (let j = 0; j < array.length; j++)\n        {\n            const indexStart = ((j / size | 0) * stride) + littleOffset;\n            const index = j % size;\n\n            out[indexStart + index] = array[j];\n        }\n\n        littleOffset += size;\n    }\n\n    return new Float32Array(buffer);\n}\n","// Taken from the bit-twiddle package\n\n/**\n * Rounds to next power of two.\n *\n * @function nextPow2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @return {number}\n */\nexport function nextPow2(v: number): number\n{\n    v += v === 0 ? 1 : 0;\n    --v;\n    v |= v >>> 1;\n    v |= v >>> 2;\n    v |= v >>> 4;\n    v |= v >>> 8;\n    v |= v >>> 16;\n\n    return v + 1;\n}\n\n/**\n * Checks if a number is a power of two.\n *\n * @function isPow2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @return {boolean} `true` if value is power of two\n */\nexport function isPow2(v: number): boolean\n{\n    return !(v & (v - 1)) && (!!v);\n}\n\n/**\n * Computes ceil of log base 2\n *\n * @function log2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @return {number} logarithm base 2\n */\nexport function log2(v: number): number\n{\n    let r = (v > 0xFFFF ? 1 : 0) << 4;\n\n    v >>>= r;\n\n    let shift = (v > 0xFF ? 1 : 0) << 3;\n\n    v >>>= shift; r |= shift;\n    shift = (v > 0xF ? 1 : 0) << 2;\n    v >>>= shift; r |= shift;\n    shift = (v > 0x3 ? 1 : 0) << 1;\n    v >>>= shift; r |= shift;\n\n    return r | (v >> 1);\n}\n","/**\n * Remove items from a javascript array without generating garbage\n *\n * @function removeItems\n * @memberof PIXI.utils\n * @param {Array<any>} arr - Array to remove elements from\n * @param {number} startIdx - starting index\n * @param {number} removeCount - how many to remove\n */\nexport function removeItems(arr: any[], startIdx: number, removeCount: number): void\n{\n    const length = arr.length;\n    let i;\n\n    if (startIdx >= length || removeCount === 0)\n    {\n        return;\n    }\n\n    removeCount = (startIdx + removeCount > length ? length - startIdx : removeCount);\n\n    const len = length - removeCount;\n\n    for (i = startIdx; i < len; ++i)\n    {\n        arr[i] = arr[i + removeCount];\n    }\n\n    arr.length = len;\n}\n","/**\n * Returns sign of number\n *\n * @memberof PIXI.utils\n * @function sign\n * @param {number} n - the number to check the sign of\n * @returns {number} 0 if `n` is 0, -1 if `n` is negative, 1 if `n` is positive\n */\nexport function sign(n: number): -1|0|1\n{\n    if (n === 0) return 0;\n\n    return n < 0 ? -1 : 1;\n}\n","let nextUid = 0;\n\n/**\n * Gets the next unique identifier\n *\n * @memberof PIXI.utils\n * @function uid\n * @return {number} The next unique identifier to use.\n */\nexport function uid(): number\n{\n    return ++nextUid;\n}\n","import type { Dict } from '../types';\n\n// A map of warning messages already fired\nconst warnings: Dict<boolean> = {};\n\n/**\n * Helper for warning developers about deprecated features & settings.\n * A stack track for warnings is given; useful for tracking-down where\n * deprecated methods/properties/classes are being used within the code.\n *\n * @memberof PIXI.utils\n * @function deprecation\n * @param {string} version - The version where the feature became deprecated\n * @param {string} message - Message should include what is deprecated, where, and the new solution\n * @param {number} [ignoreDepth=3] - The number of steps to ignore at the top of the error stack\n *        this is mostly to ignore internal deprecation calls.\n */\nexport function deprecation(version: string, message: string, ignoreDepth = 3): void\n{\n    // Ignore duplicat\n    if (warnings[message])\n    {\n        return;\n    }\n\n    /* eslint-disable no-console */\n    let stack = new Error().stack;\n\n    // Handle IE < 10 and Safari < 6\n    if (typeof stack === 'undefined')\n    {\n        console.warn('PixiJS Deprecation Warning: ', `${message}\\nDeprecated since v${version}`);\n    }\n    else\n    {\n        // chop off the stack trace which includes PixiJS internal calls\n        stack = stack.split('\\n').splice(ignoreDepth).join('\\n');\n\n        if (console.groupCollapsed)\n        {\n            console.groupCollapsed(\n                '%cPixiJS Deprecation Warning: %c%s',\n                'color:#614108;background:#fffbe6',\n                'font-weight:normal;color:#614108;background:#fffbe6',\n                `${message}\\nDeprecated since v${version}`\n            );\n            console.warn(stack);\n            console.groupEnd();\n        }\n        else\n        {\n            console.warn('PixiJS Deprecation Warning: ', `${message}\\nDeprecated since v${version}`);\n            console.warn(stack);\n        }\n    }\n    /* eslint-enable no-console */\n\n    warnings[message] = true;\n}\n","import type { Program, Texture, BaseTexture } from '@pixi/core';\n\n/**\n * @todo Describe property usage\n *\n * @static\n * @name ProgramCache\n * @memberof PIXI.utils\n * @type {Object}\n */\nexport const ProgramCache: {[key: string]: Program} = {};\n\n/**\n * @todo Describe property usage\n *\n * @static\n * @name TextureCache\n * @memberof PIXI.utils\n * @type {Object}\n */\nexport const TextureCache: {[key: string]: Texture} = Object.create(null);\n\n/**\n * @todo Describe property usage\n *\n * @static\n * @name BaseTextureCache\n * @memberof PIXI.utils\n * @type {Object}\n */\nexport const BaseTextureCache: {[key: string]: BaseTexture} = Object.create(null);\n\n/**\n * Destroys all texture in the cache\n *\n * @memberof PIXI.utils\n * @function destroyTextureCache\n */\nexport function destroyTextureCache(): void\n{\n    let key;\n\n    for (key in TextureCache)\n    {\n        TextureCache[key].destroy();\n    }\n    for (key in BaseTextureCache)\n    {\n        BaseTextureCache[key].destroy();\n    }\n}\n\n/**\n * Removes all textures from cache, but does not destroy them\n *\n * @memberof PIXI.utils\n * @function clearTextureCache\n */\nexport function clearTextureCache(): void\n{\n    let key;\n\n    for (key in TextureCache)\n    {\n        delete TextureCache[key];\n    }\n    for (key in BaseTextureCache)\n    {\n        delete BaseTextureCache[key];\n    }\n}\n","import { settings } from '@pixi/settings';\n\n/**\n * Creates a Canvas element of the given size to be used as a target for rendering to.\n *\n * @class\n * @memberof PIXI.utils\n */\nexport class CanvasRenderTarget\n{\n    public canvas: HTMLCanvasElement;\n\n    public context: CanvasRenderingContext2D;\n\n    public resolution: number;\n\n    /**\n     * @param {number} width - the width for the newly created canvas\n     * @param {number} height - the height for the newly created canvas\n     * @param {number} [resolution=1] - The resolution / device pixel ratio of the canvas\n     */\n    constructor(width: number, height: number, resolution: number)\n    {\n        /**\n         * The Canvas object that belongs to this CanvasRenderTarget.\n         *\n         * @member {HTMLCanvasElement}\n         */\n        this.canvas = document.createElement('canvas');\n\n        /**\n         * A CanvasRenderingContext2D object representing a two-dimensional rendering context.\n         *\n         * @member {CanvasRenderingContext2D}\n         */\n        this.context = this.canvas.getContext('2d');\n\n        this.resolution = resolution || settings.RESOLUTION;\n\n        this.resize(width, height);\n    }\n\n    /**\n     * Clears the canvas that was created by the CanvasRenderTarget class.\n     *\n     * @private\n     */\n    clear(): void\n    {\n        this.context.setTransform(1, 0, 0, 1, 0, 0);\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    /**\n     * Resizes the canvas to the specified width and height.\n     *\n     * @param {number} width - the new width of the canvas\n     * @param {number} height - the new height of the canvas\n     */\n    resize(width: number, height: number): void\n    {\n        this.canvas.width = width * this.resolution;\n        this.canvas.height = height * this.resolution;\n    }\n\n    /**\n     * Destroys this canvas.\n     *\n     */\n    destroy(): void\n    {\n        this.context = null;\n        this.canvas = null;\n    }\n\n    /**\n     * The width of the canvas buffer in pixels.\n     *\n     * @member {number}\n     */\n    get width(): number\n    {\n        return this.canvas.width;\n    }\n\n    set width(val: number)\n    {\n        this.canvas.width = val;\n    }\n\n    /**\n     * The height of the canvas buffer in pixels.\n     *\n     * @member {number}\n     */\n    get height(): number\n    {\n        return this.canvas.height;\n    }\n\n    set height(val: number)\n    {\n        this.canvas.height = val;\n    }\n}\n","interface Inset {\n    top?: number;\n    left?: number;\n    right?: number;\n    bottom?: number;\n}\n\n/**\n * Trim transparent borders from a canvas\n *\n * @memberof PIXI.utils\n * @function trimCanvas\n * @param {HTMLCanvasElement} canvas - the canvas to trim\n * @returns {object} Trim data\n */\nexport function trimCanvas(canvas: HTMLCanvasElement): {width: number; height: number; data?: ImageData}\n{\n    // https://gist.github.com/remy/784508\n\n    let width = canvas.width;\n    let height = canvas.height;\n\n    const context = canvas.getContext('2d');\n    const imageData = context.getImageData(0, 0, width, height);\n    const pixels = imageData.data;\n    const len = pixels.length;\n\n    const bound: Inset = {\n        top: null,\n        left: null,\n        right: null,\n        bottom: null,\n    };\n    let data = null;\n    let i;\n    let x;\n    let y;\n\n    for (i = 0; i < len; i += 4)\n    {\n        if (pixels[i + 3] !== 0)\n        {\n            x = (i / 4) % width;\n            y = ~~((i / 4) / width);\n\n            if (bound.top === null)\n            {\n                bound.top = y;\n            }\n\n            if (bound.left === null)\n            {\n                bound.left = x;\n            }\n            else if (x < bound.left)\n            {\n                bound.left = x;\n            }\n\n            if (bound.right === null)\n            {\n                bound.right = x + 1;\n            }\n            else if (bound.right < x)\n            {\n                bound.right = x + 1;\n            }\n\n            if (bound.bottom === null)\n            {\n                bound.bottom = y;\n            }\n            else if (bound.bottom < y)\n            {\n                bound.bottom = y;\n            }\n        }\n    }\n\n    if (bound.top !== null)\n    {\n        width = bound.right - bound.left;\n        height = bound.bottom - bound.top + 1;\n        data = context.getImageData(bound.left, bound.top, width, height);\n    }\n\n    return {\n        height,\n        width,\n        data,\n    };\n}\n","/**\n * Regexp for data URI.\n * Based on: {@link https://github.com/ragingwind/data-uri-regex}\n *\n * @static\n * @constant {RegExp|string} DATA_URI\n * @memberof PIXI\n * @example data:image/png;base64\n */\nexport const DATA_URI = /^\\s*data:(?:([\\w-]+)\\/([\\w+.-]+))?(?:;charset=([\\w-]+))?(?:;(base64))?,(.*)/i;\n","import { DATA_URI } from '../const';\n\nexport interface DecomposedDataUri {\n    mediaType: string;\n    subType: string;\n    charset: string;\n    encoding: string;\n    data: string;\n}\n\n/**\n * @memberof PIXI.utils\n * @interface DecomposedDataUri\n */\n\n/**\n * type, eg. `image`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} mediaType\n */\n\n/**\n * Sub type, eg. `png`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} subType\n */\n\n/**\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} charset\n */\n\n/**\n * Data encoding, eg. `base64`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} encoding\n */\n\n/**\n * The actual data\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} data\n */\n\n/**\n * Split a data URI into components. Returns undefined if\n * parameter `dataUri` is not a valid data URI.\n *\n * @memberof PIXI.utils\n * @function decomposeDataUri\n * @param {string} dataUri - the data URI to check\n * @return {PIXI.utils.DecomposedDataUri|undefined} The decomposed data uri or undefined\n */\nexport function decomposeDataUri(dataUri: string): DecomposedDataUri\n{\n    const dataUriMatch = DATA_URI.exec(dataUri);\n\n    if (dataUriMatch)\n    {\n        return {\n            mediaType: dataUriMatch[1] ? dataUriMatch[1].toLowerCase() : undefined,\n            subType: dataUriMatch[2] ? dataUriMatch[2].toLowerCase() : undefined,\n            charset: dataUriMatch[3] ? dataUriMatch[3].toLowerCase() : undefined,\n            encoding: dataUriMatch[4] ? dataUriMatch[4].toLowerCase() : undefined,\n            data: dataUriMatch[5],\n        };\n    }\n\n    return undefined;\n}\n","import * as _url from 'url';\n\nlet tempAnchor: HTMLAnchorElement|undefined;\n\n/**\n * Sets the `crossOrigin` property for this resource based on if the url\n * for this resource is cross-origin. If crossOrigin was manually set, this\n * function does nothing.\n * Nipped from the resource loader!\n *\n * @ignore\n * @param {string} url - The url to test.\n * @param {object} [loc=window.location] - The location object to test against.\n * @return {string} The crossOrigin value to use (or empty string for none).\n */\nexport function determineCrossOrigin(url: string, loc: Location = window.location): string\n{\n    // data: and javascript: urls are considered same-origin\n    if (url.indexOf('data:') === 0)\n    {\n        return '';\n    }\n\n    // default is window.location\n    loc = loc || window.location;\n\n    if (!tempAnchor)\n    {\n        tempAnchor = document.createElement('a');\n    }\n\n    // let the browser determine the full href for the url of this resource and then\n    // parse with the node url lib, we can't use the properties of the anchor element\n    // because they don't work in IE9 :(\n    tempAnchor.href = url;\n    const parsedUrl = _url.parse(tempAnchor.href);\n\n    const samePort = (!parsedUrl.port && loc.port === '') || (parsedUrl.port === loc.port);\n\n    // if cross origin\n    if (parsedUrl.hostname !== loc.hostname || !samePort || parsedUrl.protocol !== loc.protocol)\n    {\n        return 'anonymous';\n    }\n\n    return '';\n}\n","import { settings } from '../settings';\n\n/**\n * get the resolution / device pixel ratio of an asset by looking for the prefix\n * used by spritesheets and image urls\n *\n * @memberof PIXI.utils\n * @function getResolutionOfUrl\n * @param {string} url - the image path\n * @param {number} [defaultValue=1] - the defaultValue if no filename prefix is set.\n * @return {number} resolution / device pixel ratio of an asset\n */\nexport function getResolutionOfUrl(url: string, defaultValue?: number): number\n{\n    const resolution = settings.RETINA_PREFIX.exec(url);\n\n    if (resolution)\n    {\n        return parseFloat(resolution[1]);\n    }\n\n    return defaultValue !== undefined ? defaultValue : 1;\n}\n","/**\n * Generalized convenience utilities for PIXI.\n * @example\n * // Extend PIXI's internal Event Emitter.\n * class MyEmitter extends PIXI.utils.EventEmitter {\n *   constructor() {\n *      super();\n *      console.log(\"Emitter created!\");\n *   }\n * }\n *\n * // Get info on current device\n * console.log(PIXI.utils.isMobile);\n *\n * // Convert hex color to string\n * console.log(PIXI.utils.hex2string(0xff00ff)); // returns: \"#ff00ff\"\n * @namespace PIXI.utils\n */\n\n/**\n * A simple JS library that detects mobile devices.\n *\n * @see {@link https://github.com/kaimallea/isMobile}\n *\n * @memberof PIXI.utils\n * @name isMobile\n * @type {Object}\n * @property {boolean} any - `true` if current platform is tablet or phone device\n * @property {boolean} tablet - `true` if current platform large-screen tablet device\n * @property {boolean} phone - `true` if current platform small-screen phone device\n * @property {object} apple\n * @property {boolean} apple.device - `true` if any Apple device\n * @property {boolean} apple.tablet - `true` if any Apple iPad\n * @property {boolean} apple.phone - `true` if any Apple iPhone\n * @property {boolean} apple.ipod - `true` if any iPod\n * @property {object} android\n * @property {boolean} android.device - `true` if any Android device\n * @property {boolean} android.tablet - `true` if any Android tablet\n * @property {boolean} android.phone - `true` if any Android phone\n * @property {object} amazon\n * @property {boolean} amazon.device - `true` if any Silk device\n * @property {boolean} amazon.tablet - `true` if any Silk tablet\n * @property {boolean} amazon.phone - `true` if any Silk phone\n * @property {object} windows\n * @property {boolean} windows.device - `true` if any Windows device\n * @property {boolean} windows.tablet - `true` if any Windows tablet\n * @property {boolean} windows.phone - `true` if any Windows phone\n */\nexport { isMobile } from '@pixi/settings';\n\nimport EventEmitter from 'eventemitter3';\n\n/**\n * A high performance event emitter\n *\n * @see {@link https://github.com/primus/eventemitter3}\n *\n * @memberof PIXI.utils\n * @class EventEmitter\n * @type {EventEmitter}\n */\nexport { EventEmitter };\n\n/**\n * A polygon triangulation library\n *\n * @see {@link https://github.com/mapbox/earcut}\n *\n * @memberof PIXI.utils\n * @function earcut\n * @param {number[]} vertices - A flat array of vertex coordinates\n * @param {number[]} [holes] - An array of hole indices\n * @param {number} [dimensions=2] - The number of coordinates per vertex in the input array\n * @return {number[]} Triangulated polygon\n */\nexport { default as earcut } from 'earcut';\n\n/**\n * Node.js compatible URL utilities.\n *\n * @see https://www.npmjs.com/package/url\n *\n * @memberof PIXI.utils\n * @name url\n * @type {object}\n */\nexport { default as url } from 'url';\n\nimport './settings';\n\nexport * from './browser/hello';\nexport * from './browser/isWebGLSupported';\nexport * from './color/hex';\nexport * from './color/premultiply';\nexport * from './data/createIndicesForQuads';\nexport * from './data/getBufferType';\nexport * from './data/interleaveTypedArrays';\nexport * from './data/pow2';\nexport * from './data/removeItems';\nexport * from './data/sign';\nexport * from './data/uid';\nexport * from './logging/deprecation';\nexport * from './media/caches';\nexport * from './media/CanvasRenderTarget';\nexport * from './media/trimCanvas';\nexport * from './network/decomposeDataUri';\nexport * from './network/determineCrossOrigin';\nexport * from './network/getResolutionOfUrl';\nexport * from './const';\nexport * from './types';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}